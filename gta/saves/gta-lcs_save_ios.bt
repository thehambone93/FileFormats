/*------------------------------------------------------------
 *--- 010 Editor v6.0.2 Binary Template ----------------------
 *
 *             File: gta-lcs_save_ios.bt
 *           Author: thehambone
 *          Purpose: Documenation of GTA LCS save file format
 *        Last edit: 04 January 2016
 *            Notes: iOS
 *----------------------------------------------------------*/

/**********
 *
 * NOTE: ALL FINDINGS ARE UNTESTED
 *
 **********/

typedef struct RwV3D
{
    float fX, fY, fZ;
};

struct
{
    local int n = 0;
    struct
    {
        char    blockSig[4];
        uint32  blockSize;
    
        switch (n++) {
            case 0: /* BLOCK 0: SIMPLEVARS */
                struct
                {
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    wchar_t     saveName[8] <comment="GXT key">;
                    DWORD       unknown;
                    DWORD       unknown <comment="current island?">;
                    DWORD       unknown <comment="current island?">;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown <comment="global timer/weather timer?">;
                    DWORD       unknown <comment="global timer/weather timer?">;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown <comment="repeated data">;
                    DWORD       unknown;
                    DWORD       unknown <comment="repeated data">;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       nMinuteLength <comment="length of 1 in-game minute">;
                    DWORD       unknown;
                    BYTE        bGameHour <comment="current time in-game (hour)">;
                    BYTE        bGameMinute <comment="current time in-game (minute)">;
                    WORD        unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    FLOAT       fUnknown;
                    RwV3D       unknownCoord <comment="camera pos/player pos?">;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       _unknown[15] <optimize=false>;
                } block <name="SimpleVars">;
                break;
    
            case 1: /* BLOCK 1: SCRIPT */
                struct
                {
                    char    blockSig[4];
                    uint32  blockSize;
                    struct
                    {
                        uint32      nScriptVariableSpaceSize;

                        /* player coords stored at offsets 8, 9, and 10
                           weapon ammo from 125 - 157
                           current weapon at 159
                           wanted level at 160
                           armor at 161
                           money at 162
                           current outfit at 534
                        */
                        DWORD       aScriptVariables[nScriptVariableSpaceSize / sizeof(DWORD)] <optimize=false>;
    
                        uint32      blockSize;
                        struct
                        {
                            DWORD       unknown <comment="onmission flag pointer?">;
                            // the rest is unknown, possibly ContactInfo and BaseBrief
                            align(blockSize - 4);
                        } scmState <comment="not sure what to call this struct">;
                        // the rest is unknown, possibly BuilndingSwap and InvisibilitySetting
                        align(260);
                    } scriptData;
                    uint32      nRunningScripts;
                    struct
                    {
                        DWORD   unknown[6] <optimize=false>;
                        char    name[8];
                        // the rest is unknown, (locals are in there somewhere, along with ip and other flags)
                        align(520);
                    } aRunningScript[nRunningScripts] <optimize=false>;
                } block <name="Script">;
                break;
    
            case 2: /* BLOCK 2: GARAGES */
                struct
                {
                    struct
                    {
                        DWORD       unknown <comment="18">;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       nLoveMediaCarsStatus <format=binary>;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       unknown;

                        /* Special Vehicle Properties
                           0x0001 = bullet-proof
                           0x0002 = fire-proof
                           0x0004 = explosion-proof
                           0x0008 = collision-proof
                           0x0010 = ???
                           0x0020 = pop-proof
                           0x0040 = quad damage resistance (DD)
                           0x0080 = heavy
                           0x0100 = permanent color
                           0x0200 = timebomb fitted
                           0x0400 = tip-proof
                           0x8000 = ???
                        */
                        struct
                        {
                            uint32      nVehicleModelID;
                            RwV3D       vPosition;
                            float       rotation[3] <comment="euler angles I think">;
                            DWORD       unknown <comment="constant 0x3F800000">;
                            DWORD       nSpecialProperties <format=binary>;
                            BYTE        bColorIDPrimary;
                            BYTE        bColorIDSecondary;
                            enum<BYTE>
                            {
                                HEAD_RADIO,
                                DOUBLE_CLEF_FM,
                                K_JAH,
                                RISE_FM,
                                LIPS_106,
                                RADIO_DEL_MUNDO,
                                MSX_98,
                                FLASHBACK_FM,
                                THE_LIBERTY_JAM,
                                LCFR,
                                RADIO_OFF
                            } eRadioStation;
                            BYTE        bModelVariationA;
                            BYTE        bModelVariationB;
                            // align?
                            BYTE        bUnknown;
                            BYTE        bUnknown;
                            BYTE        bUnknown;
                        } aSaveGarageSlot[48] <optimize=false>;
                    } stSaveGarageSlots;
                    // the rest is presaumably info about each script-controlled garages
                } block <name="Garages">;
                if (blockSize > sizeof(block)) {
                    align(blockSize - sizeof(block));
                }
                break;
    
            case 3:  /* BLOCK 3: PLAYER */
                struct
                {
                    align(128);
                    DWORD   unknown <comment="max player health/armor?">;
                    DWORD   unknown <comment="max player health/armor?">;
                    DWORD   unknown <comment="max player health/armor?">;
                } block <name="Player">;
                if (blockSize > sizeof(block)) {
                    align(blockSize - sizeof(block));
                }
                break;
    
            case 4:  /* BLOCK 4: STATS */
                struct
                {
                    align(blockSize);
                } block <name="Stats", comment="undocumented">;
                break;
        }
    } blocks[5] <optimize=false, open=true>;
    // No checksum? File ends with 3 extra bytes (zeros)
    BYTE    bUnknown <comment="align?">;
    BYTE    bUnknown <comment="align?">;
    BYTE    bUnknown <comment="align?">;
} lcsSave <name="GTA LCS iOS Save", open=true>;
 
void align(int n)
{
    FSkip(n);
}
