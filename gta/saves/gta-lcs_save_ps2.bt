/*------------------------------------------------------------
 *--- 010 Editor v6.0.2 Binary Template ----------------------
 *
 *             File: gta-lcs_save_ps2.bt
 *           Author: thehambone
 *          Purpose: Documenation of GTA LCS save file format
 *        Last edit: 16 February 2016
 *            Notes: PlayStation 2
 *----------------------------------------------------------*/

typedef struct RwV3D
{
    float fX, fY, fZ;
};

enum <DWORD> FLAG__
{
    OFF__, ON__
};

struct
{
    local int n = 0;
    struct
    {
        char    blockSig[4];
        uint32  blockSize;
    
        switch (n++) {
            case 0: /* BLOCK 0: SIMPLEVARS */
                // Game settings are stored in here somewhere
                struct
                {
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown <comment="current island?">;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       nMinuteLength <comment="length of 1 in-game minute">;
                    DWORD       unknown;
                    BYTE        bGameHour <comment="current time in-game (hour)">;
                    BYTE        bGameMinute <comment="current time in-game (minute)">;
                    WORD        wUnknown <comment="align?">;
                    DWORD       unknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    WORD        nWeatherRelated;
                    WORD        nWeatherRelated;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    FLOAT       fUnknown <comment="weather interpolation?">;
                    RwV3D       unknown <comment="camera pos?">;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    struct
                    {
                        DWORD       nSecond;
                        DWORD       nMinute;
                        DWORD       nHour;
                        DWORD       nDay;
                        DWORD       nMonth;
                        DWORD       nYear;
                    } timestamp;
                } block <name="SimpleVars">;
                break;
    
            case 1: /* BLOCK 1: SCRIPT */
                struct
                {
                    char    blockSig[4];
                    uint32  blockSize;
                    struct
                    {
                        uint32      nScriptVariableSpaceSize;

                        /* player coords stored at offsets 7, 8, and 9
                           weapon ammo from 124 - 156
                           current weapon at 158
                           wanted level at 159
                           armor at 160
                           money at 161
                           current outfit at 533
                        */
                        DWORD       aScriptVariables[nScriptVariableSpaceSize / sizeof(DWORD)] <optimize=false>;

                        uint32      blockSize;
                        struct
                        {
                            DWORD       unknown <comment="onmission flag pointer?">;
                            // the rest is unknown, possibly ContactInfo and BaseBrief
                            align(blockSize - 4);
                        } scmState <comment="not sure what to call this struct">;
                        // the rest is unknown, possibly BuilndingSwap and InvisibilitySetting
                        align(260);     // Size unconfirmed
                    } scriptData;
                    uint32      nRunningScripts;
                    struct
                    {
                        DWORD   unknown[4] <optimize=false>;
                        char    name[8];
                        // the rest is unknown, (locals are in there somewhere, along with ip and other flags)
                        align(516);
                    } aRunningScript[nRunningScripts] <optimize=false>;
                } block <name="Script">;
                break;
    
            case 2: /* BLOCK 2: GARAGES */
                struct
                {
                    struct
                    {
                        DWORD       unknown <comment="18">;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       nLoveMediaCarsStatus <format=binary>;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       unknown;
                        DWORD       unknown;
                        /* Special Vehicle Properties
                           0x0001 = bullet-proof
                           0x0002 = fire-proof
                           0x0004 = explosion-proof
                           0x0008 = collision-proof
                           0x0010 = ???
                           0x0020 = pop-proof
                           0x0040 = quad damage resistance (DD)
                           0x0080 = heavy
                           0x0100 = permanent color
                           0x0200 = timebomb fitted
                           0x0400 = tip-proof
                           0x8000 = ???
                        */
                        struct
                        {
                            uint32      nVehicleModelID;
                            RwV3D       vPosition;
                            float       rotation[3] <comment="euler angles I think">;
                            float       fHandlingMultiplier <comment="seems to only apply to bikes">;
                            DWORD       nSpecialProperties <format=binary>;
                            BYTE        bColorIDPrimary;
                            BYTE        bColorIDSecondary;
                            enum<BYTE>
                            {
                                HEAD_RADIO,
                                DOUBLE_CLEF_FM,
                                K_JAH,
                                RISE_FM,
                                LIPS_106,
                                RADIO_DEL_MUNDO,
                                MSX_98,
                                FLASHBACK_FM,
                                THE_LIBERTY_JAM,
                                LCFR,
                                RADIO_OFF,
                            } eRadioStation;
                            BYTE        bModelVariationA;
                            BYTE        bModelVariationB;
                            BYTE        bUnknown;
                            BYTE        bUnknown;
                            BYTE        bUnknown;
                        } aSaveGarageSlot[48] <optimize=false>;
                    } stSaveGarageSlots;
                    // the rest is presaumably info about each script-controlled garages
                } block <name="Garages">;
                if (blockSize > sizeof(block)) {
                    align(blockSize - sizeof(block));
                }
                break;
    
            case 3:  /* BLOCK 3: PLAYER */
                struct
                {
                    int32       nMoney;
                    DWORD       unknown;
                    BYTE        bUnknown;
                    BYTE        bUnknown;
                    BYTE        bUnknown;
                    BYTE        bUnknown;
                    byte        bUnknown;
                    WORD        unknown;
                    int32       nMoneyOnScreen;
                    DWORD       nHiddenPackagesFound <comment="changing this does nothing in-game">;
                    DWORD       unknown;
                    FLAG__      hasInfiniteSprint;
                    DWORD       unknown;
                    FLAG__      isFireproof;
                    ubyte       bMaxHealth;
                    ubyte       bMaxArmor;
                    BYTE        bUnknown;
                    BYTE        bUnknown;
                    BYTE        bUnknown;
                    BYTE        bUnknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    BYTE        bUnknown;
                    BYTE        bUnknown;
                    BYTE        bUnknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    RwV3D       unknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       _unknown[56];
                } block <name="Player">;
                break;
    
            case 4:  /* BLOCK 4: STATS */
                struct
                {
                    DWORD       nPeopleYouveWasted;
                    DWORD       nPeopleWastedByOthers;
                    DWORD       nCarsExploded;
                    DWORD       nBoatsDestroyed;
                    DWORD       nTiresPoppedWithGunfire;
                    DWORD       nBulletsFired;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown <comment="COP wasted?">;
                    DWORD       unknown <comment="CIVMALE wasted?">;
                    DWORD       unknown <comment="CIVFEMALE wasted?">;
                    DWORD       nGANG1Wasted <comment="MAFIA LEONE">;
                    DWORD       nGANG2Wasted <comment="TRIAD">;
                    DWORD       nGANG3Wasted <comment="DIABLO">;
                    DWORD       nGANG4Wasted <comment="YAKUZA">;
                    DWORD       nGANG5Wasted <comment="YARDIE">;
                    DWORD       nGANG6Wasted <comment="COLUMBIAN">;
                    DWORD       nGANG7Wasted <comment="HOOD">;
                    DWORD       nGANG8Wasted <comment="MAFIA FORELLI">;
                    DWORD       nGANG9Wasted <comment="MAFIA SINDACCOS">;
                    DWORD       unknown <comment="EMERGENCY wasted?">;
                    DWORD       unknown <comment="FIREMAN wasted?">;
                    DWORD       nCriminalsWasted;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       nHelicoptersDestroyed;
                    FLOAT       fMissionPoints <comment="not sure why this is a float">;
                    FLOAT       fTotalMissionPoints <comment="not sure why this is a float">;
                    DWORD       nKgsOfExplosivesUsed;
                    DWORD       nBulletsThatHit;
                    DWORD       nCarsCrushed;
                    DWORD       nNumberOfHeadshots;
                    DWORD       nTotalNumberOfWantedStarsAttained;
                    DWORD       nTotalNumberOfWantedStarsEvaded;
                    DWORD       nTimesBusted;
                    DWORD       nHospitalVisits;
                    DWORD       nDaysPassedInGame;
                    DWORD       nNumberOfSaves;
                    DWORD       nSprayings;
                    FLOAT       fMaxInsaneJumpDist;
                    FLOAT       fMaxInsaneJumpHeight;
                    DWORD       nMaxInsaneJumpFlips;
                    DWORD       nMaxInsaneJumpRotation;
                    enum <DWORD>
                    {
                        NO_INSANE_STUNTS_COMPLETED,
                        INSANE_STUNT,
                        PERFECT_INSANE_STUNT,
                        DOUBLE_INSANE_STUNT,
                        PERFECT_DOUBLE_INSANE_STUNT,
                        TRIPLE_INSANE_STUNT,
                        PERFECT_TRIPLE_INSANE_STUNT,
                        QUDRUPLE_INSANE_STUNT,
                        PERFECT_QUADRUPLE_INSANE_STUNT,
                    } eBestInsaneStuntSoFar;
                    DWORD       unknown <comment="unique jumps completed?">;
                    DWORD       unknown <comment="total unique jumps?">;
                    DWORD       nMissionAttempts;
                    DWORD       nPassengersDroppedOff;
                    DWORD       nCashMadeInTaxi;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    DWORD       nPeopleSavedInAnAmbulance;
                    DWORD       nCriminalsKilledOnVigilanteMission;
                    DWORD       nTotalFiresExtinguished;
                    DWORD       unknown <comment="highest paramedic/vigilante/firefighter level">;
                    DWORD       unknown <comment="highest paramedic/vigilante/firefighter level">;
                    DWORD       unknown <comment="highest paramedic/vigilante/firefighter level">;
                    DWORD       nPhotosTaken;
                    DWORD       nRampagesPassed;
                    DWORD       nMostTimeLeftInKarmageddon <comment="seconds">;
                    DWORD       nMostKillsInRCTriadTakeDown;
                    DWORD       unknown <comment="total rampages?">;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    FLOAT       fUnknown;
                    DWORD       nLongestWheelieTime;
                    DWORD       nLongestStoppieTime;
                    DWORD       nLongest2WheelsTime;
                    FLOAT       fLongestWheelieDistance;
                    FLOAT       fLongestStoppieDistance;
                    FLOAT       fLongest2WheelsDistance;
                    FLOAT       fLongestFacePlantDistance;
                    FLOAT       fUnknown;
                    DWORD       nPropertyDestroyed;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    BYTE        bUnknown;
                    FLOAT       fUnknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    char        szLastMissionPassed[8] <comment="GXT key">;
                    DWORD       unknown;
                    DWORD       nCarsSold;
                    DWORD       nCashMadeSellingCars;
                    DWORD       nBikesSold;
                    DWORD       nCashMadeSellingBikes;
                    DWORD       unknown <comment="cars found for Love Media (or total)">;
                    DWORD       unknown <comment="cars found for Love Media (or total)">;
                    DWORD       nHighestSlashTVLevel;
                    DWORD       nTotalCashMadeOnSlashTV;
                    DWORD       nOpponentsKilledOnSlashTV;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       nCashMadeCollectingTrash;
                    DWORD       nHitmenWasted;
                    DWORD       nTotalAvengingAngelJusticeDishedOut;
                    DWORD       nNumberOfAvengingAngelMissionsPassed;
                    struct
                    {
                        DWORD   nPortland;
                        DWORD   nStauntonIsland;
                        DWORD   nShoresideVale;
                    } highestAvengingAngelLevel;
                    DWORD       nMostTimeLeftOnWongSideOfTheTrack <comment="seconds">;
                    DWORD       unknown;
                    DWORD       unknown <comment="most air achieved?">;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown;
                    DWORD       unknown <comment="outfit changes?">;
                    struct
                    {
                        struct
                        {
                            DWORD   nThrashinRC;
                            DWORD   nRaginRC;
                            DWORD   nChasinRC;
                        } fastestLap <comment="seconds">;
                        struct
                        {
                            DWORD   nThrashinRC;
                            DWORD   nRaginRC;
                            DWORD   nChasinRC;
                        } bestPosition;
                    } rcRaces;
                    struct
                    {
                        struct
                        {
                            DWORD   nLowRiderRumble;
                            DWORD   nDeimosDash;
                            DWORD   nWiCheetahRun;
                            DWORD   nRedLightRacing;
                            DWORD   nTorringtonTT;
                            DWORD   nGangstaGP;
                        } bestPosition;
                        struct
                        {
                            DWORD   nLowRiderRumble;
                            DWORD   nDeimosDash;
                            DWORD   nWiCheetahRun;
                            DWORD   nRedLightRacing;
                            DWORD   nTorringtonTT;
                            DWORD   nGangstaGP;
                        } fastestLap <comment="seconds">;
                        struct
                        {
                            DWORD   nLowRiderRumble;
                            DWORD   nDeimosDash;
                            DWORD   nWiCheetahRun;
                            DWORD   nRedLightRacing;
                            DWORD   nTorringtonTT;
                            DWORD   nGangstaGP;
                        } fastestTime <comment="seconds">;
                    } races;
                    struct
                    {
                        struct
                        {
                            DWORD   nCourse1;
                            DWORD   nCourse2;
                            DWORD   nCourse3;
                            DWORD   nCourse4;
                            DWORD   nCourse5;
                            DWORD   nCourse6;
                            DWORD   nCourse7;
                            DWORD   nCourse8;
                            DWORD   nCourse9;
                            DWORD   nCourse10;
                        } fastestLap <comment="seconds">;
                        struct
                        {
                            DWORD   nCourse1;
                            DWORD   nCourse2;
                            DWORD   nCourse3;
                            DWORD   nCourse4;
                            DWORD   nCourse5;
                            DWORD   nCourse6;
                            DWORD   nCourse7;
                            DWORD   nCourse8;
                            DWORD   nCourse9;
                            DWORD   nCourse10;
                        } fastestTime <comment="seconds">;
                    } bumpAndGrinds;
                    DWORD       _unknown[10] <comment="padding?">;
                } block <name="Stats">;
                break;
        }
    } blocks[5] <optimize=false, open=true>;
    struct
    {
        align(FileSize() - FTell() - 4);
    } padding;
    DWORD   checksum<read=checksum>;
} lcsSave <name="GTA LCS PS2 Save", open=true>;
 
void align(int n)
{
    FSkip(n);
}

string checksum(int oldSum)
{
    local int checksumOffset = 0;
    local uint32 newSum;
    local string newSumString;

    checksumOffset = FileSize() - 4;

    newSum = Checksum(CHECKSUM_BYTE, 0, checksumOffset);
    if (newSum != oldSum) {
        WriteUInt(checksumOffset, newSum);
    }

    SPrintf(newSumString, "%d", (uint32) newSum);
    return newSumString;
}
